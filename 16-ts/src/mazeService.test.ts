import { expect, test } from 'vitest'
import { pt1, pt2 } from './mazeService'

test('Test input part 1', () => {
  const input = [
    '###############',
    '#.......#....E#',
    '#.#.###.#.###.#',
    '#.....#.#...#.#',
    '#.###.#####.#.#',
    '#.#.#.......#.#',
    '#.#.#####.###.#',
    '#...........#.#',
    '###.#.#####.#.#',
    '#...#.....#.#.#',
    '#.#.#.###.#.#.#',
    '#.....#...#.#.#',
    '#.###.#.#.#.#.#',
    '#S..#.....#...#',
    '###############',
  ]

  // 36 forward -- 7 turns
  expect(pt1(input)).toBe(7036)
})

test('Test other example part 1', () => {
  const input = [
    '#################',
    '#...#...#...#..E#',
    '#.#.#.#.#.#.#.#.#',
    '#.#.#.#...#...#.#',
    '#.#.#.#.###.#.#.#',
    '#...#.#.#.....#.#',
    '#.#.#.#.#.#####.#',
    '#.#...#.#.#.....#',
    '#.#.#####.#.###.#',
    '#.#.#.......#...#',
    '#.#.###.#####.###',
    '#.#.#...#.....#.#',
    '#.#.#.#####.###.#',
    '#.#.#.........#.#',
    '#.#.#.#########.#',
    '#S#.............#',
    '#################',
  ]

  // Turn instantly before even moving
  expect(pt1(input)).toBe(11048)
})

test('Test alternative example part 1', () => {
  const input = [
    '###########################',
    '#######################..E#',
    '######################..#.#',
    '#####################..##.#',
    '####################..###.#',
    '###################..##...#',
    '##################..###.###',
    '#################..####...#',
    '################..#######.#',
    '###############..##.......#',
    '##############..###.#######',
    '#############..####.......#',
    '############..###########.#',
    '###########..##...........#',
    '##########..###.###########',
    '#########..####...........#',
    '########..###############.#',
    '#######..##...............#',
    '######..###.###############',
    '#####..####...............#',
    '####..###################.#',
    '###..##...................#',
    '##..###.###################',
    '#..####...................#',
    '#.#######################.#',
    '#S........................#',
    '###########################',
  ]

  expect(pt1(input)).toBe(21148)
})

test('Test more alternative example part 1', () => {
  const input = [
    '########################################################',
    '#.........#.........#.........#.........#.........#...E#',
    '#.........#.........#.........#.........#.........#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#.........#.........#.........#.........#.........#',
    '#S...#.........#.........#.........#.........#.........#',
    '########################################################',
  ]

  expect(pt1(input)).toBe(21110)
})

test('Test edge case part 1', () => {
  const input = [
    '##########################################################################################################',
    '#.........#.........#.........#.........#.........#.........#.........#.........#.........#.........#...E#',
    '#.........#.........#.........#.........#.........#.........#.........#.........#.........#.........#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#....#',
    '#....#.........#.........#.........#.........#.........#.........#.........#.........#.........#.........#',
    '#S...#.........#.........#.........#.........#.........#.........#.........#.........#.........#.........#',
    '##########################################################################################################',
  ]

  expect(pt1(input)).toBe(41210)
})

test('Test more edge case part 1', () => {
  const input = [
    '##########',
    '#.......E#',
    '#.##.#####',
    '#..#.....#',
    '##.#####.#',
    '#S.......#',
    '##########',
  ]

  expect(pt1(input)).toBe(4013)
})

test('Test input part 2', () => {
  const input = [
    '',
  ]

  expect(pt2(input)).toBe(0)
})

